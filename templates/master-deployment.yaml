apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-master
  labels:
    {{- include "compss-app.labels" . | nindent 4 }}
    {{- toYaml .Values.compss.master.labels | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      pod-hostname: master
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        pod-hostname: master
    spec:
      serviceAccountName: master-sa
      terminationGracePeriodSeconds: 5
      hostname: master
      subdomain: {{ .Release.Name }}
      dnsConfig:
        searches:
        - {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
      initContainers:
      - name: wait-for-workers
        image: busybox
        command:
          - sh
          - -c
          - |
            for i in $(seq 1 {{ $.Values.compss.worker.number }}); do
              worker_index=$((i - 1))
              until nslookup {{ .Release.Name }}-worker-${worker_index}.{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local; do
                echo "Waiting for {{ .Release.Name }}-worker-${worker_index}";
                sleep 2;
              done;
            done
      containers:
      {{- if eq .Values.compss.master.prometheusClient.enabled true }}
      - name: redis-server
        image: "redis:latest"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["redis-server"]
        ports:
        - containerPort: {{ .Values.compss.master.prometheusClient.redisContainerPort }}
          name: redis
      - name: prometheus-client
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: 
          - "python3"
          - "{{ .Values.app.context.folderPath }}/metrics_client_counter.py"
          - "--redis_port"
          - "{{ .Values.compss.master.prometheusClient.redisContainerPort }}"
          - "--prometheus_port"
          - "{{ .Values.compss.master.prometheusClient.containerPort }}"
          #- "--buckets"
          #- "{{ .Values.compss.master.prometheusClient.buckets }}"
        ports:
        - containerPort: {{ .Values.compss.master.prometheusClient.containerPort }}
          name: prometheus
      {{- end}}
      - name: master
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: DEPLOYMENT_NAME
          value: {{ .Release.Name }}
        command: [ "/opt/COMPSs/Runtime/scripts/system/kubernetes/master.sh" ]
        args: 
          - "{{ .Release.Namespace }}"
          - "{{ .Values.compss.worker.number }}"
          - "{{ .Values.compss.worker.resources.cpu }}"
          - "{{ .Values.compss.worker.resources.memory }}"
          - "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          - "{{ .Values.app.context.folderPath }}"  # app_dir
          - "0"   # min_vms
          - "0"   # max_vms
          - "0"   # creation_time
          {{- $params := "" }}
          {{- range $key, $value := .Values.app.params }}
            {{- if and (ne $key "") }}  
              {{- $params = printf "%s --%s %s" $params $key $value }}  
            {{- end }}
          {{- end }}
          - "--scheduler=es.bsc.compss.scheduler.custom.rtheuristics.RTHeuristicsScheduler --scheduler_config_file=/home/omartinez/compss-matmul/matmul-extract/sched.config -d -t -g {{ .Values.app.context.folderPath }}/{{ .Values.app.context.file }}{{ $params }}"
        ports:
        - name: {{ .Values.compss.master.ports.name }}
          containerPort: 22
          protocol: TCP
      {{- if and .Values.compss.master.volume }}
        volumeMounts:
          - name: master-results-pvc
            mountPath: /root/.COMPSs/ # mount path within the container 
      volumes:
      - name: master-results-pvc
        persistentVolumeClaim:
          claimName: master-results-pvc
      {{- end }}